// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from whl.djinni

#pragma once

#include "djinni/jni/djinni_support.hpp"
#include "whl/configuration.hpp"

namespace whl { namespace bridge {

class Configuration final {
public:
    using CppType = ::whl::Configuration;
    using JniType = jobject;

    using Boxed = Configuration;

    ~Configuration();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    Configuration();
    friend ::djinni::JniClass<Configuration>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("io/corendos/whl/bridge/Configuration") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Ljava/lang/String;Ljava/lang/String;II)V") };
    const jfieldID field_sampleModuleUrl { ::djinni::jniGetFieldID(clazz.get(), "sampleModuleUrl", "Ljava/lang/String;") };
    const jfieldID field_publicKey { ::djinni::jniGetFieldID(clazz.get(), "publicKey", "Ljava/lang/String;") };
    const jfieldID field_wasmStackSize { ::djinni::jniGetFieldID(clazz.get(), "wasmStackSize", "I") };
    const jfieldID field_wasmHeapSize { ::djinni::jniGetFieldID(clazz.get(), "wasmHeapSize", "I") };
};

} }  // namespace whl::bridge
