// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from whl.djinni

#pragma once

#include "djinni/jni/djinni_support.hpp"
#include "whl/wasm_hot_loading.hpp"

namespace whl { namespace bridge {

class WasmHotLoading final : ::djinni::JniInterface<::whl::WasmHotLoading, WasmHotLoading> {
public:
    using CppType = std::shared_ptr<::whl::WasmHotLoading>;
    using CppOptType = std::shared_ptr<::whl::WasmHotLoading>;
    using JniType = jobject;

    using Boxed = WasmHotLoading;

    ~WasmHotLoading();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<WasmHotLoading>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<WasmHotLoading>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    WasmHotLoading();
    friend ::djinni::JniClass<WasmHotLoading>;
    friend ::djinni::JniInterface<::whl::WasmHotLoading, WasmHotLoading>;

};

} }  // namespace whl::bridge
